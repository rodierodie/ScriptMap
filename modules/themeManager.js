/**
 * Theme Manager - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –í—ã–¥–µ–ª–µ–Ω –∏–∑ uiModule –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π —Å CSS
 */
export class ThemeManager {
    constructor(state, events) {
        this.state = state;
        this.events = events;
        this.currentTheme = 'light';
        
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ–º
     */
    init() {
        this.loadThemeFromStorage();
        this.setupEventListeners();
        
        console.log('üé® Theme manager initialized');
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ç–µ–º—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        this.state.watch('ui.theme', (newTheme) => {
            this.applyTheme(newTheme);
        });

        // –°–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
        this.events.on('theme:toggle', () => {
            this.toggleTheme();
        });

        this.events.on('theme:set', (theme) => {
            this.setTheme(theme);
        });
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–º—É –∏–∑ localStorage
     */
    loadThemeFromStorage() {
        try {
            const savedTheme = localStorage.getItem('notes-app-theme');
            if (savedTheme && this.isValidTheme(savedTheme)) {
                this.setTheme(savedTheme);
            } else {
                this.setTheme('light'); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
            }
        } catch (error) {
            console.warn('Could not load theme from localStorage:', error);
            this.setTheme('light');
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–µ–º—ã
     * @param {string} theme - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã
     * @returns {boolean} - –í–∞–ª–∏–¥–Ω–∞—è –ª–∏ —Ç–µ–º–∞
     */
    isValidTheme(theme) {
        const validThemes = ['light', 'dark'];
        return validThemes.includes(theme);
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º—É
     * @param {string} theme - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã ('light' | 'dark')
     */
    setTheme(theme) {
        if (!this.isValidTheme(theme)) {
            console.warn(`Invalid theme: ${theme}`);
            return;
        }

        this.currentTheme = theme;
        this.state.set('ui.theme', theme);
        this.applyTheme(theme);
        this.saveThemeToStorage(theme);

        this.events.emit('theme:changed', theme);
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É
     */
    toggleTheme() {
        const newTheme = this.currentTheme === 'light' ? 'dark' : 'light';
        this.setTheme(newTheme);
    }

    /**
     * –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É –∫ DOM
     * @param {string} theme - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã
     */
    applyTheme(theme) {
        // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª–∞—Å—Å—ã —Ç–µ–º—ã
        document.body.removeAttribute('data-theme');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∞—Ç—Ä–∏–±—É—Ç —Ç–µ–º—ã
        if (theme !== 'light') {
            document.body.setAttribute('data-theme', theme);
        }

        this.currentTheme = theme;
        
        console.log(`üé® Theme applied: ${theme}`);
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–º—É –≤ localStorage
     * @param {string} theme - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã
     */
    saveThemeToStorage(theme) {
        try {
            localStorage.setItem('notes-app-theme', theme);
        } catch (error) {
            console.warn('Could not save theme to localStorage:', error);
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ç–µ–º—É
     * @returns {string} - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
     */
    getCurrentTheme() {
        return this.currentTheme;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–º
     * @returns {Array} - –ú–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–µ–º
     */
    getAvailableThemes() {
        return [
            { id: 'light', name: '–°–≤–µ—Ç–ª–∞—è', icon: '‚òÄÔ∏è' },
            { id: 'dark', name: '–¢–µ–º–Ω–∞—è', icon: 'üåô' }
        ];
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
     * @returns {boolean} - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Å–∏—Å—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞
     */
    isSystemThemeSupported() {
        return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches !== undefined;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é —Ç–µ–º—É
     * @returns {string} - –°–∏—Å—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ ('light' | 'dark')
     */
    getSystemTheme() {
        if (!this.isSystemThemeSupported()) {
            return 'light';
        }

        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    setSystemTheme() {
        const systemTheme = this.getSystemTheme();
        this.setTheme(systemTheme);

        // –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
        if (this.isSystemThemeSupported()) {
            const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
            mediaQuery.addEventListener('change', (e) => {
                const newSystemTheme = e.matches ? 'dark' : 'light';
                this.setTheme(newSystemTheme);
            });
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
     * @returns {Object} - –û–±—ä–µ–∫—Ç —Å CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
     */
    getThemeVariables() {
        const computedStyle = getComputedStyle(document.documentElement);
        
        return {
            primary: computedStyle.getPropertyValue('--color-primary').trim(),
            background: computedStyle.getPropertyValue('--bg-primary').trim(),
            text: computedStyle.getPropertyValue('--text-primary').trim(),
            border: computedStyle.getPropertyValue('--border-light').trim()
        };
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
     * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
     */
    createThemeToggle(container) {
        const toggle = document.createElement('button');
        toggle.className = 'theme-toggle';
        toggle.title = '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É';
        
        const updateToggle = () => {
            const themes = this.getAvailableThemes();
            const currentThemeData = themes.find(t => t.id === this.currentTheme);
            const nextThemeData = themes.find(t => t.id !== this.currentTheme);
            
            toggle.innerHTML = currentThemeData.icon;
            toggle.title = `–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ ${nextThemeData.name.toLowerCase()} —Ç–µ–º—É`;
        };

        toggle.addEventListener('click', () => {
            this.toggleTheme();
        });

        // –û–±–Ω–æ–≤–ª—è—Ç—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–º—ã
        this.events.on('theme:changed', updateToggle);
        
        updateToggle();
        container.appendChild(toggle);
        
        return toggle;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–µ–º
     * @returns {Object} - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ–º
     */
    getStats() {
        return {
            currentTheme: this.currentTheme,
            availableThemes: this.getAvailableThemes().length,
            systemThemeSupported: this.isSystemThemeSupported(),
            systemTheme: this.getSystemTheme()
        };
    }

    /**
     * –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
     */
    destroy() {
        // –û—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ events.off
        console.log('üóëÔ∏è Theme manager destroyed');
    }
}