/**
 * UI Module v2.0 - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤–∫–ª–∞–¥–æ–∫
 */
export class UIModule {
    constructor(state, events) {
        this.state = state;
        this.events = events;
        this.version = '2.0';
        
        // –ù–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã UI
        this.elements = {
            infoBtn: null,
            instructions: null,
            addNoteBtn: null
        };
        
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    init() {
        this.createUIElements();
        this.validateElements();
        this.setupEventListeners();
        this.setupStateWatchers();
        this.setupKeyboardShortcuts();
        
        console.log('üéõÔ∏è UI module v2.0 initialized');
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã UI
     */
    createUIElements() {
        // –°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (—Ç–µ–ø–µ—Ä—å –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É)
        this.elements.infoBtn = document.createElement('button');
        this.elements.infoBtn.className = 'info-btn';
        this.elements.infoBtn.title = '–ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏';
        this.elements.infoBtn.innerHTML = '‚Ñπ';
        document.body.appendChild(this.elements.infoBtn);

        // –°–æ–∑–¥–∞—Ç—å –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π (—Ç–µ–ø–µ—Ä—å –≤–Ω–∏–∑—É —Å–ª–µ–≤–∞)
        this.elements.instructions = document.createElement('div');
        this.elements.instructions.className = 'instructions hidden';
        this.elements.instructions.innerHTML = `
            <strong>üéØ –°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π v2.0:</strong> Ctrl+1 = –û—Å–Ω–æ–≤–Ω–æ–µ –¥–µ—Ä–µ–≤–æ ‚Ä¢ Ctrl+2,3,4 = –†–æ–ª–∏ ‚Ä¢ Ctrl+T = –Ω–æ–≤–∞—è —Ä–æ–ª—å<br>
            <strong>üîó –°–≤—è–∑–∏:</strong> Ctrl+C = —Å–æ–∑–¥–∞—Ç—å —Å–≤—è–∑—å –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏ ‚Ä¢ –ù–∞–≤–µ–¥–∏—Ç–µ –Ω–∞ –ª–∏–Ω–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è<br>
            <strong>üìù –ë–ª–æ–∫–∏:</strong> –ü—Ä–æ–±–µ–ª + –º—ã—à—å = –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ ‚Ä¢ –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ = –Ω–æ–≤—ã–π –±–ª–æ–∫ ‚Ä¢ "–û—Ç–∫—Ä—ã—Ç—å" –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è<br>
            <strong>‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏:</strong> Ctrl+E = —ç–∫—Å–ø–æ—Ä—Ç ‚Ä¢ Ctrl+R = —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ‚Ä¢ ? = –ø–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –ø–æ–º–æ—â—å
        `;
        document.body.appendChild(this.elements.instructions);

        // –°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        this.elements.addNoteBtn = document.createElement('button');
        this.elements.addNoteBtn.className = 'add-note-btn';
        this.elements.addNoteBtn.id = 'addBtn';
        this.elements.addNoteBtn.title = '–î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç';
        this.elements.addNoteBtn.innerHTML = '+';
        document.body.appendChild(this.elements.addNoteBtn);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    validateElements() {
        const missing = Object.entries(this.elements)
            .filter(([key, element]) => !element)
            .map(([key]) => key);
            
        if (missing.length > 0) {
            console.warn(`‚ö†Ô∏è UI elements could not be created: ${missing.join(', ')}`);
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // –ö–Ω–æ–ø–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        if (this.elements.infoBtn) {
            this.elements.infoBtn.addEventListener('click', () => {
                this.toggleInstructions();
            });
        }

        // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º
        if (this.elements.addNoteBtn) {
            this.elements.addNoteBtn.addEventListener('click', () => {
                this.handleAddRequest();
            });
        }

        // –ö–ª–∏–∫ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è –∏—Ö —Å–∫—Ä—ã—Ç–∏—è
        if (this.elements.instructions) {
            this.elements.instructions.addEventListener('click', () => {
                this.hideInstructions();
            });
        }

        // –ö–ª–∏–∫ –≤–Ω–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –∏—Ö —Å–∫—Ä—ã—Ç–∏—è
        document.addEventListener('click', (e) => {
            if (this.state.get('ui.instructionsVisible') && 
                this.elements.instructions &&
                this.elements.infoBtn &&
                !this.elements.instructions.contains(e.target) &&
                !this.elements.infoBtn.contains(e.target)) {
                this.hideInstructions();
            }
        });

        // –°–æ–±—ã—Ç–∏—è –æ—Ç —Å–∏—Å—Ç–µ–º—ã –≤–∫–ª–∞–¥–æ–∫
        this.events.on('tab:context-changed', (context) => {
            this.handleTabContextChange(context);
        });

        // –°–æ–±—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
        this.events.on('ui:show-notification', (data) => {
            this.showNotification(data.message, data.type, data.duration);
        });

        // –°–æ–±—ã—Ç–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
        this.events.on('ui:add-reference-request', () => {
            // –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø–∞–ª–∏—Ç—Ä—ã –¥–ª—è —Ä–æ–ª–µ–π
            this.events.emit('palette:open-request');
        });
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤–∫–ª–∞–¥–∫–∏
     * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∫–ª–∞–¥–∫–∏
     */
    handleTabContextChange(context) {
        this.updateAddButton(context);
        this.updateInstructions(context);
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
     * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∫–ª–∞–¥–∫–∏
     */
    updateAddButton(context) {
        if (!this.elements.addNoteBtn) return;

        if (context.isMainTree) {
            // –í –æ—Å–Ω–æ–≤–Ω–æ–º –¥–µ—Ä–µ–≤–µ - —Å–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤
            this.elements.addNoteBtn.title = '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫ (Ctrl+N)';
            this.elements.addNoteBtn.classList.remove('palette-mode');
        } else {
            // –í —Ä–æ–ª—è—Ö - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ —á–µ—Ä–µ–∑ –ø–∞–ª–∏—Ç—Ä—É
            this.elements.addNoteBtn.title = `–î–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫ –≤ —Ä–æ–ª—å "${context.role?.name || '—Ä–æ–ª—å'}"`;
            this.elements.addNoteBtn.classList.add('palette-mode');
        }
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
     * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∫–ª–∞–¥–∫–∏
     */
    updateInstructions(context) {
        if (!this.elements.instructions) return;

        let instructionsHTML;
        
        if (context.isMainTree) {
            instructionsHTML = `
                <strong>üå≥ –û—Å–Ω–æ–≤–Ω–æ–µ –¥–µ—Ä–µ–≤–æ:</strong> –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤<br>
                <strong>üîó –°–≤—è–∑–∏:</strong> Ctrl+C = —Å–æ–∑–¥–∞—Ç—å —Å–≤—è–∑—å –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏ ‚Ä¢ –ù–∞–≤–µ–¥–∏—Ç–µ –Ω–∞ –ª–∏–Ω–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è<br>
                <strong>üìù –ë–ª–æ–∫–∏:</strong> –ü—Ä–æ–±–µ–ª + –º—ã—à—å = –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ ‚Ä¢ –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ = –Ω–æ–≤—ã–π –±–ª–æ–∫ ‚Ä¢ + = —Å–æ–∑–¥–∞—Ç—å –±–ª–æ–∫<br>
                <strong>‚å®Ô∏è –†–æ–ª–∏:</strong> Ctrl+2,3,4 = –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π ‚Ä¢ Ctrl+T = –Ω–æ–≤–∞—è —Ä–æ–ª—å
            `;
        } else {
            instructionsHTML = `
                <strong>üë§ –†–æ–ª—å "${context.role?.name || '—Ä–æ–ª—å'}":</strong> –ö–æ–º–ø–æ–Ω–æ–≤–∫–∞ –±–ª–æ–∫–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π<br>
                <strong>üé® –ü–∞–ª–∏—Ç—Ä–∞:</strong> + = –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–ª–∏—Ç—Ä—É –±–ª–æ–∫–æ–≤ ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –±–ª–æ–∫–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞<br>
                <strong>üîó –°—Å—ã–ª–∫–∏:</strong> –°–≤—è–∑–∏ –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏ –≤–∏–¥–Ω—ã –≤–æ –≤—Å–µ—Ö —Ä–æ–ª—è—Ö<br>
                <strong>‚å®Ô∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è:</strong> Ctrl+1 = –æ—Å–Ω–æ–≤–Ω–æ–µ –¥–µ—Ä–µ–≤–æ ‚Ä¢ Ctrl+T = –Ω–æ–≤–∞—è —Ä–æ–ª—å
            `;
        }
        
        this.elements.instructions.innerHTML = instructionsHTML;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
     */
    handleAddRequest() {
        this.events.emit('ui:add-request');
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    setupStateWatchers() {
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
        this.state.watch('ui.instructionsVisible', (visible) => {
            this.updateInstructionsVisibility(visible);
        });

        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç–µ–º—ã
        this.state.watch('ui.theme', (theme) => {
            this.updateTheme(theme);
        });

        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
        this.state.watch('ui.activeTab', (newTab) => {
            this.updateUIForTab(newTab);
        });

        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –±–ª–æ–∫–æ–≤ –¥–ª—è —Å—á–µ—Ç—á–∏–∫–æ–≤
        this.state.watch('blocks', () => this.updateNotesCount());
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å UI –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
     * @param {string} tabId - ID –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
     */
    updateUIForTab(tabId) {
        const isMainTree = tabId === 'main';
        
        // –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        if (this.elements.addNoteBtn) {
            if (isMainTree) {
                this.elements.addNoteBtn.classList.remove('palette-mode');
                this.elements.addNoteBtn.title = '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫';
            } else {
                this.elements.addNoteBtn.classList.add('palette-mode');
                const role = this.state.get(`roles.${tabId}`);
                this.elements.addNoteBtn.title = `–î–æ–±–∞–≤–∏—Ç—å –≤ —Ä–æ–ª—å "${role?.name || '—Ä–æ–ª—å'}"`;
            }
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
     */
    setupKeyboardShortcuts() {
        document.addEventListener('keydown', (e) => {
            // –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            if (document.querySelector('.modal-overlay, .role-modal-overlay.visible')) {
                return;
            }

            // –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—Å–ª–∏ —Ñ–æ–∫—É—Å –≤ textarea –∏–ª–∏ input
            if (e.target.tagName === 'TEXTAREA' || e.target.tagName === 'INPUT') return;

            switch (e.key) {
                case '?':
                    e.preventDefault();
                    this.toggleInstructions();
                    break;
                    
                case 'n':
                    if (e.ctrlKey || e.metaKey) {
                        e.preventDefault();
                        this.handleAddRequest();
                    }
                    break;
                    
                case 'h':
                    if (e.ctrlKey || e.metaKey) {
                        e.preventDefault();
                        this.centerCanvas();
                    }
                    break;
                    
                case 'Escape':
                    if (this.state.get('ui.instructionsVisible')) {
                        this.hideInstructions();
                    }
                    break;

                case 's':
                    if (e.ctrlKey && e.shiftKey) {
                        e.preventDefault();
                        this.showConnectionsStats();
                    }
                    break;
            }
        });
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
     */
    toggleInstructions() {
        const currentlyVisible = this.state.get('ui.instructionsVisible');
        this.state.set('ui.instructionsVisible', !currentlyVisible);
        
        this.events.emit('ui:instructions-toggled', !currentlyVisible);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
     */
    showInstructions() {
        this.state.set('ui.instructionsVisible', true);
        this.events.emit('ui:instructions-shown');
    }

    /**
     * –°–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
     */
    hideInstructions() {
        this.state.set('ui.instructionsVisible', false);
        this.events.emit('ui:instructions-hidden');
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –≤ DOM
     * @param {boolean} visible - –í–∏–¥–∏–º–æ—Å—Ç—å
     */
    updateInstructionsVisibility(visible) {
        if (!this.elements.instructions || !this.elements.infoBtn) return;

        if (visible) {
            this.elements.instructions.classList.remove('hidden');
            this.elements.infoBtn.classList.add('hidden');
            this.elements.infoBtn.setAttribute('aria-expanded', 'true');
        } else {
            this.elements.instructions.classList.add('hidden');
            this.elements.infoBtn.classList.remove('hidden');
            this.elements.infoBtn.setAttribute('aria-expanded', 'false');
        }
    }

    /**
     * –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ö–æ–ª—Å—Ç
     */
    centerCanvas() {
        this.events.emit('canvas:center-request');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–≤—è–∑–µ–π
     */
    showConnectionsStats() {
        // –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç –º–æ–¥—É–ª—è —Å–≤—è–∑–µ–π
        this.events.emit('connections:stats-request');
        
        // –ï—Å–ª–∏ –º–æ–¥—É–ª—å —Å–≤—è–∑–µ–π –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        setTimeout(() => {
            const blocks = this.state.get('blocks');
            const roles = this.state.get('roles');
            const connections = this.state.get('connections');
            
            const totalReferences = Object.values(roles).reduce(
                (sum, role) => sum + (role.references?.length || 0), 0
            );
            
            const message = [
                `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Notes App v2.0:`,
                ``,
                `üß± –ë–ª–æ–∫–∏: ${blocks.length}`,
                `üë• –†–æ–ª–∏: ${Object.keys(roles).length}`,
                `üìé –°—Å—ã–ª–∫–∏: ${totalReferences}`,
                `üîó –°–≤—è–∑–∏: ${connections.length}`,
                ``,
                `üí° Ctrl+R = –ø–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è`
            ].join('\n');
            
            alert(message);
        }, 100);
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * @param {string} theme - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã ('light', 'dark')
     */
    updateTheme(theme) {
        document.body.setAttribute('data-theme', theme);
        
        // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ localStorage
        try {
            localStorage.setItem('notes-app-theme', theme);
        } catch (error) {
            console.warn('Could not save theme to localStorage:', error);
        }
        
        this.events.emit('ui:theme-changed', theme);
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É
     */
    toggleTheme() {
        const currentTheme = this.state.get('ui.theme');
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        this.state.set('ui.theme', newTheme);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     * @param {string} message - –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {string} type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ('info', 'success', 'warning', 'error')
     * @param {number} duration - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞ –≤ –º—Å
     */
    showNotification(message, type = 'info', duration = 3000) {
        // –£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–≥–æ –∂–µ —Ç–∏–ø–∞
        document.querySelectorAll(`.notification-${type}`).forEach(notification => {
            notification.remove();
        });

        const notification = document.createElement('div');
        notification.className = `notification notification-${type}`;
        notification.textContent = message;
        
        // –î–æ–±–∞–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        const icons = {
            info: '‚ÑπÔ∏è',
            success: '‚úÖ',
            warning: '‚ö†Ô∏è',
            error: '‚ùå'
        };
        
        notification.innerHTML = `${icons[type] || ''} ${message}`;
        
        document.body.appendChild(notification);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
        setTimeout(() => {
            if (notification.parentNode) {
                notification.style.animation = 'slideOut 0.3s ease-in';
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.parentNode.removeChild(notification);
                    }
                }, 300);
            }
        }, duration);
        
        this.events.emit('ui:notification-shown', { message, type, duration });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {function} onConfirm - Callback –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
     * @param {function} onCancel - Callback –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ
     */
    showConfirmDialog(message, onConfirm, onCancel) {
        const result = confirm(message);
        if (result && onConfirm) {
            onConfirm();
        } else if (!result && onCancel) {
            onCancel();
        }
        
        this.events.emit('ui:confirm-dialog-shown', { message, result });
        return result;
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –∑–∞–º–µ—Ç–æ–∫/–±–ª–æ–∫–æ–≤
     * @param {number} count - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
     */
    updateNotesCount(count = null) {
        if (count === null) {
            count = this.state.get('blocks').length;
        }

        // –û–±–Ω–æ–≤–∏—Ç—å title —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const activeTab = this.state.get('ui.activeTab');
        let titleSuffix = '';
        
        if (activeTab === 'main') {
            titleSuffix = count > 0 ? ` (${count} –±–ª–æ–∫–æ–≤)` : '';
        } else {
            const role = this.state.get(`roles.${activeTab}`);
            const referencesCount = role?.references?.length || 0;
            titleSuffix = ` - ${role?.name || '–†–æ–ª—å'} (${referencesCount} —Å—Å—ã–ª–æ–∫)`;
        }
        
        document.title = `Notes App v2.0${titleSuffix}`;
        
        this.events.emit('ui:notes-count-updated', count);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è v2.0
     */
    showStats() {
        const blocks = this.state.get('blocks');
        const roles = this.state.get('roles');
        const connections = this.state.get('connections');
        
        const totalReferences = Object.values(roles).reduce(
            (sum, role) => sum + (role.references?.length || 0), 0
        );
        
        const totalCharacters = blocks.reduce((sum, block) => sum + (block.content?.length || 0), 0);
        const totalWords = blocks.reduce((sum, block) => {
            return sum + (block.content?.trim().split(/\s+/).filter(word => word.length > 0).length || 0);
        }, 0);
        
        const customRoles = Object.values(roles).filter(role => !role.isDefault).length;
        
        const stats = [
            `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Notes App v2.0:`,
            ``,
            `üß± –ë–ª–æ–∫–∏: ${blocks.length}`,
            `üë• –†–æ–ª–∏: ${Object.keys(roles).length} (${customRoles} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö)`,
            `üìé –°—Å—ã–ª–∫–∏: ${totalReferences}`,
            `üîó –°–≤—è–∑–∏: ${connections.length}`,
            ``,
            `üìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ:`,
            `‚Ä¢ –°–∏–º–≤–æ–ª–æ–≤: ${totalCharacters}`,
            `‚Ä¢ –°–ª–æ–≤: ${totalWords}`,
            `‚Ä¢ –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ –±–ª–æ–∫–∞: ${blocks.length > 0 ? Math.round(totalCharacters / blocks.length) : 0} —Å–∏–º–≤–æ–ª–æ–≤`,
            ``,
            `‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏:`,
            `‚Ä¢ Ctrl+E = —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö`,
            `‚Ä¢ Ctrl+T = –Ω–æ–≤–∞—è —Ä–æ–ª—å`,
            `‚Ä¢ Ctrl+1,2,3,4 = –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫`
        ].join('\n');
        
        alert(stats);
        
        this.events.emit('ui:stats-shown', { 
            blocks: blocks.length, 
            roles: Object.keys(roles).length,
            customRoles,
            references: totalReferences,
            connections: connections.length,
            characters: totalCharacters, 
            words: totalWords 
        });
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–º—É –∏–∑ localStorage
     */
    initializeTheme() {
        try {
            const savedTheme = localStorage.getItem('notes-app-theme');
            if (savedTheme && ['light', 'dark'].includes(savedTheme)) {
                this.state.set('ui.theme', savedTheme);
            }
        } catch (error) {
            console.warn('Could not load theme from localStorage:', error);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –Ω–∏–∂–Ω–µ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è)
     */
    handleResize() {
        // –ï—Å–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤–∏–¥–Ω—ã, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–º–µ—â–∞—é—Ç—Å—è –ª–∏ –æ–Ω–∏ –≤ –Ω–æ–≤–æ–µ –æ–∫–Ω–æ
        if (this.state.get('ui.instructionsVisible') && this.elements.instructions) {
            const rect = this.elements.instructions.getBoundingClientRect();
            
            // –ò–∑–º–µ–Ω–µ–Ω–∞ –ª–æ–≥–∏–∫–∞: —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –≤—ã—Ö–æ–¥—è—Ç –ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∑–∞ –≤–µ—Ä—Ö–Ω–∏–π –∫—Ä–∞–π (—Ç.–∫. –æ–Ω–∏ –≤–Ω–∏–∑—É)
            if (rect.left < 0 || rect.top < 0 || rect.right > window.innerWidth) {
                this.hideInstructions();
                this.showNotification('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–∫—Ä—ã—Ç—ã –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞', 'info', 2000);
            }
        }
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
     */
    showMigrationIndicator(message = '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...') {
        let overlay = document.getElementById('migrationOverlay');
        
        if (!overlay) {
            overlay = document.createElement('div');
            overlay.className = 'migration-overlay';
            overlay.id = 'migrationOverlay';
            overlay.innerHTML = `
                <div class="migration-modal">
                    <div class="migration-icon">üîÑ</div>
                    <div class="migration-title">${message}</div>
                    <div class="migration-subtitle">–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –º–∏–≥—Ä–∞—Ü–∏—è –∫ –≤–µ—Ä—Å–∏–∏ 2.0</div>
                    <div class="migration-progress">
                        <div class="migration-progress-bar"></div>
                    </div>
                </div>
            `;
            document.body.appendChild(overlay);
        }
        
        overlay.style.display = 'flex';
    }

    /**
     * –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–∏
     */
    hideMigrationIndicator() {
        const overlay = document.getElementById('migrationOverlay');
        if (overlay) {
            overlay.style.display = 'none';
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ UI v2.0
     * @returns {Object} - –û–±—ä–µ–∫—Ç —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º UI
     */
    getUIState() {
        return {
            version: this.version,
            instructionsVisible: this.state.get('ui.instructionsVisible'),
            theme: this.state.get('ui.theme'),
            activeTab: this.state.get('ui.activeTab'),
            paletteOpen: this.state.get('ui.paletteOpen')
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–¥—É–ª—è
     * @returns {Object} - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ UI –º–æ–¥—É–ª—è
     */
    getStats() {
        return {
            version: this.version,
            elementsCreated: Object.keys(this.elements).length,
            notificationsShown: 0, // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫
            themeChanges: 0, // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫
            instructionsToggled: 0 // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫
        };
    }

    /**
     * –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –º–æ–¥—É–ª—è
     */
    destroy() {
        // –£–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        Object.values(this.elements).forEach(element => {
            if (element && element.parentNode) {
                element.parentNode.removeChild(element);
            }
        });
        
        console.log('üóëÔ∏è UI module v2.0 destroyed');
    }
}